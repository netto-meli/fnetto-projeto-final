openapi: 3.0.1
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
servers:
  - url: //localhost:8080/
tags:
  - name: advertise-controller
    description: Advertise Controller
  - name: auth-resource
    description: Auth Resource
  - name: basic-error-controller
    description: Basic Error Controller
  - name: buyer-controller
    description: Buyer Controller
  - name: cart-controller
    description: Cart Controller
  - name: delivery-controller
    description: Delivery Controller
  - name: due-date-controller
    description: Due Date Controller
  - name: inbound-order-controller
    description: Inbound Order Controller
  - name: multiple-open-api-web-mvc-resource
    description: Multiple Open Api Web Mvc Resource
  - name: open-api-web-mvc-resource
    description: Open Api Web Mvc Resource
  - name: ping-controller
    description: Ping Controller
  - name: product-controller
    description: Product Controller
  - name: representative-controller
    description: Representative Controller
  - name: section-controller
    description: Section Controller
  - name: seller-controller
    description: Seller Controller
  - name: swagger-config-resource
    description: Swagger Config Resource
  - name: swagger-welcome-web-mvc
    description: Swagger Welcome Web Mvc
  - name: user-controller
    description: User Controller
  - name: warehouse-controller
    description: Warehouse Controller
paths:
  /api/v1/auth/forgot/:
    post:
      tags:
        - auth-resource
      summary: forgot
      operationId: forgotUsingPOST
      parameters:
        - name: email
          in: query
          description: email
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/advertise:
    get:
      tags:
        - advertise-controller
      summary: findAll
      operationId: findAllUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdvertiseResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - advertise-controller
      summary: insert
      operationId: insertUsingPOST
      requestBody:
        description: advertise
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertiseRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertiseResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: advertise
  /api/v1/fresh-products/advertise/{id}:
    get:
      tags:
        - advertise-controller
      summary: findById
      operationId: findByIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertiseResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - advertise-controller
      summary: update
      operationId: updateUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: advertiseDto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvertiseRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AdvertiseResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: advertiseDto
    delete:
      tags:
        - advertise-controller
      summary: delete
      operationId: deleteUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/buyer:
    get:
      tags:
        - buyer-controller
      summary: findAll
      operationId: findAllUsingGET_1
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BuyerResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - buyer-controller
      summary: insert
      operationId: insertUsingPOST_1
      requestBody:
        description: buyer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyerRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuyerResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: buyer
  /api/v1/fresh-products/buyer/{id}:
    get:
      tags:
        - buyer-controller
      summary: findById
      operationId: findByIdUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuyerResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - buyer-controller
      summary: update
      operationId: updateUsingPUT_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: newBuyer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuyerRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuyerRequestDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: newBuyer
    delete:
      tags:
        - buyer-controller
      summary: delete
      operationId: deleteUsingDELETE_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/cart/addProduct/{idBuyer}:
    post:
      tags:
        - cart-controller
      summary: addAdvertiseItemsToCart
      operationId: addAdvertiseItemsToCartUsingPOST
      parameters:
        - name: idAdvertise
          in: query
          description: idAdvertise
          schema:
            type: integer
            format: int64
            default: 0
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          schema:
            type: integer
            format: int64
        - name: qtdProduct
          in: query
          description: qtdProduct
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SellOrderResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/cart/createSellOrder/{idBuyer}:
    put:
      tags:
        - cart-controller
      summary: createSellOrder
      operationId: createSellOrderUsingPUT
      parameters:
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SellOrderResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/cart/emptyCart/{idBuyer}:
    delete:
      tags:
        - cart-controller
      summary: emptyCart
      operationId: emptyCartUsingDELETE
      parameters:
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/cart/removeProduct/{idBuyer}:
    delete:
      tags:
        - cart-controller
      summary: removeAdvertiseItemsFromCart
      operationId: removeAdvertiseItemsFromCartUsingDELETE
      parameters:
        - name: idAdvertise
          in: query
          description: idAdvertise
          schema:
            type: integer
            format: int64
            default: 0
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          schema:
            type: integer
            format: int64
        - name: qtdRemove
          in: query
          description: qtdRemove
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SellOrderResponseDTO'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/cart/{idBuyer}:
    get:
      tags:
        - cart-controller
      summary: showCart
      operationId: showCartUsingGET
      parameters:
        - name: idBuyer
          in: path
          description: idBuyer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SellOrderResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/delivery:
    get:
      tags:
        - delivery-controller
      summary: findAllI
      operationId: findAllIUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransporterResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - delivery-controller
      summary: insert
      operationId: insertUsingPOST_2
      requestBody:
        description: transporterRequestDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransporterRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransporterResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: transporterRequestDTO
  /api/v1/fresh-products/delivery/byStatus/:
    get:
      tags:
        - delivery-controller
      summary: findByStatus
      operationId: findByStatusUsingGET
      parameters:
        - name: isInRoute
          in: query
          description: isInRoute
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransporterResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/delivery/delivery/:
    post:
      tags:
        - delivery-controller
      summary: callDelivery
      operationId: callDeliveryUsingPOST
      requestBody:
        description: deliveryIdList
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeliveryRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransporterResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: deliveryIdList
  /api/v1/fresh-products/delivery/delivery/{idTransporter}:
    put:
      tags:
        - delivery-controller
      summary: confirmDelivery
      operationId: confirmDeliveryUsingPUT
      parameters:
        - name: idTransporter
          in: path
          description: idTransporter
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: deliveryIdList
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeliveryRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransporterResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: deliveryIdList
  /api/v1/fresh-products/delivery/{id}:
    get:
      tags:
        - delivery-controller
      summary: findById
      operationId: findByIdUsingGET_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransporterResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - delivery-controller
      summary: update
      operationId: updateUsingPUT_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: transporterRequestDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransporterRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransporterResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: transporterRequestDTO
    delete:
      tags:
        - delivery-controller
      summary: delete
      operationId: deleteUsingDELETE_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/due-date/byRefrigeration/{numberOfDays}:
    get:
      tags:
        - due-date-controller
      summary: findByDueDateBeforeAndRefrigerationType
      operationId: findByDueDateBeforeAndRefrigerationTypeUsingGET
      parameters:
        - name: numberOfDays
          in: path
          description: numberOfDays
          required: true
          schema:
            type: integer
            format: int32
        - name: orderBy
          in: query
          description: orderBy
          required: true
          schema:
            type: string
        - name: refrigerationType
          in: query
          description: refrigerationType
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchByDueDateRequestDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/due-date/bySection/{numberOfDays}:
    get:
      tags:
        - due-date-controller
      summary: findByDueDateBeforeAndSectionId
      operationId: findByDueDateBeforeAndSectionIdUsingGET
      parameters:
        - name: numberOfDays
          in: path
          description: numberOfDays
          required: true
          schema:
            type: integer
            format: int32
        - name: sectionId
          in: query
          description: sectionId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchByDueDateRequestDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/inboundorder:
    get:
      tags:
        - inbound-order-controller
      summary: findAll
      operationId: findAllUsingGET_2
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InboundOrderResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - inbound-order-controller
      summary: update
      operationId: updateUsingPUT_3
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundOrderRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: request
    post:
      tags:
        - inbound-order-controller
      summary: insert
      operationId: insertUsingPOST_3
      requestBody:
        description: inboundOrderRequestDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundOrderRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: inboundOrderRequestDTO
  /api/v1/fresh-products/inboundorder/{id}:
    get:
      tags:
        - inbound-order-controller
      summary: findById
      operationId: findByIdUsingGET_3
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InboundOrderResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/product:
    get:
      tags:
        - product-controller
      summary: findAll
      operationId: findAllUsingGET_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - product-controller
      summary: insert
      operationId: insertUsingPOST_4
      requestBody:
        description: obj
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: obj
  /api/v1/fresh-products/product/listBatch/:
    get:
      tags:
        - product-controller
      summary: findBatchByProductId
      operationId: findBatchByProductIdUsingGET
      parameters:
        - name: id
          in: query
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/product/listBatchByProduct/:
    get:
      tags:
        - product-controller
      summary: orderByProductId
      operationId: orderByProductIdUsingGET
      parameters:
        - name: id
          in: query
          description: id
          required: true
          schema:
            type: integer
            format: int64
        - name: order
          in: query
          description: order
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/product/listCategory/:
    get:
      tags:
        - product-controller
      summary: findListCategory
      operationId: findListCategoryUsingGET
      parameters:
        - name: categoryProd
          in: query
          description: categoryProd
          required: true
          schema:
            type: string
            enum:
              - COLD
              - FRESH
              - FROZEN
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/product/{id}:
    get:
      tags:
        - product-controller
      summary: findById
      operationId: findByIdUsingGET_4
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - product-controller
      summary: update
      operationId: updateUsingPUT_4
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: newProd
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: newProd
    delete:
      tags:
        - product-controller
      summary: delete
      operationId: deleteUsingDELETE_3
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/representative:
    get:
      tags:
        - representative-controller
      summary: findAll
      operationId: findAllUsingGET_4
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepresentativeResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - representative-controller
      summary: insert
      operationId: insertUsingPOST_5
      requestBody:
        description: obj
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentativeRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: obj
  /api/v1/fresh-products/representative/{id}:
    get:
      tags:
        - representative-controller
      summary: findById
      operationId: findByIdUsingGET_5
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepresentativeResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - representative-controller
      summary: update
      operationId: updateUsingPUT_5
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: newObj
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepresentativeRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: newObj
    delete:
      tags:
        - representative-controller
      summary: delete
      operationId: deleteUsingDELETE_4
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/section:
    get:
      tags:
        - section-controller
      summary: findAll
      operationId: findAllUsingGET_5
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectionResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - section-controller
      summary: insert
      operationId: insertUsingPOST_6
      requestBody:
        description: sectionRequestDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SectionResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: sectionRequestDTO
  /api/v1/fresh-products/section/{id}:
    get:
      tags:
        - section-controller
      summary: findById
      operationId: findByIdUsingGET_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SectionResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - section-controller
      summary: update
      operationId: updateUsingPUT_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: sectionDTO
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SectionRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SectionResponseDTO'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: sectionDTO
    delete:
      tags:
        - section-controller
      summary: delete
      operationId: deleteUsingDELETE_5
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/seller:
    get:
      tags:
        - seller-controller
      summary: findAll
      operationId: findAllUsingGET_6
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SellerResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - seller-controller
      summary: insert
      operationId: insertUsingPOST_7
      requestBody:
        description: obj
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: obj
  /api/v1/fresh-products/seller/{id}:
    get:
      tags:
        - seller-controller
      summary: findById
      operationId: findByIdUsingGET_7
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SellerResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - seller-controller
      summary: update
      operationId: updateUsingPUT_7
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: newObj
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SellerRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: newObj
    delete:
      tags:
        - seller-controller
      summary: delete
      operationId: deleteUsingDELETE_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /api/v1/fresh-products/users:
    get:
      tags:
        - user-controller
      summary: findAll
      operationId: findAllUsingGET_7
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/warehouse:
    get:
      tags:
        - warehouse-controller
      summary: findAll
      operationId: findAllUsingGET_8
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WarehouseResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - warehouse-controller
      summary: insert
      operationId: insertUsingPOST_8
      requestBody:
        description: wh
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: wh
  /api/v1/fresh-products/warehouse/byProduct/{id}:
    get:
      tags:
        - warehouse-controller
      summary: findWarehousesByProductId
      operationId: findWarehousesByProductIdUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductByWarehouseResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /api/v1/fresh-products/warehouse/{id}:
    get:
      tags:
        - warehouse-controller
      summary: findById
      operationId: findByIdUsingGET_8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WarehouseResponseDTO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - warehouse-controller
      summary: update
      operationId: updateUsingPUT_8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: nWarehouse1
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WarehouseRequestDTO'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: nWarehouse1
    delete:
      tags:
        - warehouse-controller
      summary: delete
      operationId: deleteUsingDELETE_7
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ModelAndView'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
  /ping:
    get:
      tags:
        - ping-controller
      summary: ping
      operationId: pingUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /swagger-ui.html:
    get:
      tags:
        - swagger-welcome-web-mvc
      summary: redirectToUi
      operationId: redirectToUiUsingGET
      responses:
        200:
          description: OK
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v3/api-docs:
    get:
      tags:
        - open-api-web-mvc-resource
      summary: openapiJson
      operationId: openapiJsonUsingGET_1
      parameters:
        - name: apiDocsUrl
          in: query
          description: apiDocsUrl
          schema:
            type: string
        - name: country
          in: query
          schema:
            type: string
        - name: displayCountry
          in: query
          schema:
            type: string
        - name: displayLanguage
          in: query
          schema:
            type: string
        - name: displayName
          in: query
          schema:
            type: string
        - name: displayScript
          in: query
          schema:
            type: string
        - name: displayVariant
          in: query
          schema:
            type: string
        - name: extensionKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: ISO3Country
          in: query
          schema:
            type: string
        - name: ISO3Language
          in: query
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
        - name: script
          in: query
          schema:
            type: string
        - name: unicodeLocaleAttributes
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: unicodeLocaleKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: variant
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v3/api-docs.yaml:
    get:
      tags:
        - open-api-web-mvc-resource
      summary: openapiYaml
      operationId: openapiYamlUsingGET_1
      parameters:
        - name: apiDocsUrl
          in: query
          description: apiDocsUrl
          schema:
            type: string
        - name: country
          in: query
          schema:
            type: string
        - name: displayCountry
          in: query
          schema:
            type: string
        - name: displayLanguage
          in: query
          schema:
            type: string
        - name: displayName
          in: query
          schema:
            type: string
        - name: displayScript
          in: query
          schema:
            type: string
        - name: displayVariant
          in: query
          schema:
            type: string
        - name: extensionKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: ISO3Country
          in: query
          schema:
            type: string
        - name: ISO3Language
          in: query
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
        - name: script
          in: query
          schema:
            type: string
        - name: unicodeLocaleAttributes
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: unicodeLocaleKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: variant
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/vnd.oai.openapi:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v3/api-docs.yaml/{group}:
    get:
      tags:
        - multiple-open-api-web-mvc-resource
      summary: openapiYaml
      operationId: openapiYamlUsingGET
      parameters:
        - name: apiDocsUrl
          in: query
          description: apiDocsUrl
          schema:
            type: string
        - name: country
          in: query
          schema:
            type: string
        - name: displayCountry
          in: query
          schema:
            type: string
        - name: displayLanguage
          in: query
          schema:
            type: string
        - name: displayName
          in: query
          schema:
            type: string
        - name: displayScript
          in: query
          schema:
            type: string
        - name: displayVariant
          in: query
          schema:
            type: string
        - name: extensionKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: group
          in: path
          description: group
          required: true
          schema:
            type: string
        - name: ISO3Country
          in: query
          schema:
            type: string
        - name: ISO3Language
          in: query
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
        - name: script
          in: query
          schema:
            type: string
        - name: unicodeLocaleAttributes
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: unicodeLocaleKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: variant
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/vnd.oai.openapi:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v3/api-docs/swagger-config:
    get:
      tags:
        - swagger-config-resource
      summary: openapiJson
      operationId: openapiJsonUsingGET_2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v3/api-docs/{group}:
    get:
      tags:
        - multiple-open-api-web-mvc-resource
      summary: openapiJson
      operationId: openapiJsonUsingGET
      parameters:
        - name: apiDocsUrl
          in: query
          description: apiDocsUrl
          schema:
            type: string
        - name: country
          in: query
          schema:
            type: string
        - name: displayCountry
          in: query
          schema:
            type: string
        - name: displayLanguage
          in: query
          schema:
            type: string
        - name: displayName
          in: query
          schema:
            type: string
        - name: displayScript
          in: query
          schema:
            type: string
        - name: displayVariant
          in: query
          schema:
            type: string
        - name: extensionKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: group
          in: path
          description: group
          required: true
          schema:
            type: string
        - name: ISO3Country
          in: query
          schema:
            type: string
        - name: ISO3Language
          in: query
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
        - name: script
          in: query
          schema:
            type: string
        - name: unicodeLocaleAttributes
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: unicodeLocaleKeys
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: variant
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
components:
  schemas:
    AdvertiseRequestDTO:
      title: AdvertiseRequestDTO
      required:
        - free_shipping
        - price
        - product_id
        - seller_id
        - status
      type: object
      properties:
        description:
          maxLength: 20
          minLength: 4
          type: string
        free_shipping:
          type: boolean
        price:
          minimum: 0.01
          exclusiveMinimum: false
          type: number
        product_id:
          type: integer
          format: int64
        seller_id:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ATIVO
            - FINALIZADO
            - INATIVO
            - PAUSADO
            - PENDENTE
            - REMOVIDO
    AdvertiseResponseDTO:
      title: AdvertiseResponseDTO
      type: object
      properties:
        description:
          type: string
        free_shipping:
          type: boolean
        id:
          type: integer
          format: int64
        price:
          type: number
        product:
          $ref: '#/components/schemas/ProductResponseDTO'
        seller:
          $ref: '#/components/schemas/SellerResponseDTO'
        status:
          type: string
          enum:
            - ATIVO
            - FINALIZADO
            - INATIVO
            - PAUSADO
            - PENDENTE
            - REMOVIDO
    BatchByDueDateRequestDTO:
      title: BatchByDueDateRequestDTO
      type: object
      properties:
        advertise_id:
          type: integer
          format: int64
        batch_number:
          type: integer
          format: int64
        due_date:
          type: string
          format: date
        product_type:
          type: string
        quantity:
          type: integer
          format: int32
    BatchRequestDTO:
      title: BatchRequestDTO
      required:
        - advertise_id
        - batch_number
        - current_quantity
        - current_temperature
        - due_date
        - initial_quantity
        - manufacturing_date
        - manufacturing_time
        - minimum_temperature
      type: object
      properties:
        advertise_id:
          type: integer
          format: int64
        batch_number:
          type: integer
          format: int64
        current_quantity:
          type: integer
          format: int32
        current_temperature:
          maximum: 1E+2
          exclusiveMaximum: false
          minimum: -1E+2
          exclusiveMinimum: false
          type: number
          format: float
        due_date:
          type: string
          format: date
        initial_quantity:
          type: integer
          format: int32
        manufacturing_date:
          type: string
          format: date
        manufacturing_time:
          type: string
          format: date-time
        minimum_temperature:
          maximum: 1E+2
          exclusiveMaximum: false
          minimum: -1E+2
          exclusiveMinimum: false
          type: number
          format: float
    BatchResponseDTO:
      title: BatchResponseDTO
      type: object
      properties:
        advertise_id:
          type: integer
          format: int64
        batch_number:
          type: integer
          format: int64
        current_quantity:
          type: integer
          format: int32
        current_temperature:
          type: number
          format: float
        due_date:
          type: string
          format: date
        initial_quantity:
          type: integer
          format: int32
        manufacturing_date:
          type: string
          format: date
        manufacturing_time:
          type: string
          format: date-time
        minimum_temperature:
          type: number
          format: float
    BuyerRequestDTO:
      title: BuyerRequestDTO
      required:
        - address
        - email
        - name
        - pass
        - username
      type: object
      properties:
        address:
          maxLength: 80
          minLength: 2
          type: string
        email:
          pattern: ^[\w!#$%&'*+/=?`{|}~^-]+(?:\.[\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}$
          type: string
        name:
          maxLength: 60
          minLength: 2
          pattern: ^[-'a-zA-ZÀ-ÖØ-öø-ÿ ]+$
          type: string
        pass:
          maxLength: 2147483647
          minLength: 8
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\S+$).{8,}$
          type: string
        username:
          maxLength: 16
          minLength: 4
          pattern: ^[A-Za-z][A-Za-z0-9_]{3,16}$
          type: string
    BuyerResponseDTO:
      title: BuyerResponseDTO
      type: object
      properties:
        address:
          type: string
        email:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        username:
          type: string
    DeliveryRequestDTO:
      title: DeliveryRequestDTO
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    InboundOrderRequestDTO:
      title: InboundOrderRequestDTO
      required:
        - batch_stock
        - order_date
        - order_number
        - section
      type: object
      properties:
        batch_stock:
          type: array
          items:
            $ref: '#/components/schemas/BatchRequestDTO'
        order_date:
          type: string
          format: date
        order_number:
          type: integer
          format: int64
        section:
          $ref: '#/components/schemas/SectionRequestDTOForInboundOrder'
    InboundOrderResponseDTO:
      title: InboundOrderResponseDTO
      type: object
      properties:
        batch_stock:
          type: array
          items:
            $ref: '#/components/schemas/BatchResponseDTO'
        order_date:
          type: string
          format: date
        order_number:
          type: integer
          format: int32
        section:
          $ref: '#/components/schemas/SectionResponseDTOForInboundOrder'
    ModelAndView:
      title: ModelAndView
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
          properties: {}
        model_map:
          type: object
          additionalProperties:
            type: object
            properties: {}
        reference:
          type: boolean
        status:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        view:
          $ref: '#/components/schemas/View'
        view_name:
          type: string
    OrderItemResponseDTO:
      title: OrderItemResponseDTO
      type: object
      properties:
        id_advertise:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    ProductByWarehouseResponseDTO:
      title: ProductByWarehouseResponseDTO
      type: object
      properties:
        product_id:
          type: integer
          format: int64
        warehouses:
          type: array
          items:
            $ref: '#/components/schemas/WarehouseResponseDTOByProduct'
    ProductRequestDTO:
      title: ProductRequestDTO
      required:
        - category_refrigeration
        - description
        - max_temperature
        - min_temperature
        - name
      type: object
      properties:
        category_refrigeration:
          type: string
          enum:
            - COLD
            - FRESH
            - FROZEN
        description:
          maxLength: 100
          minLength: 4
          type: string
        max_temperature:
          maximum: 1E+2
          exclusiveMaximum: false
          minimum: -1E+2
          exclusiveMinimum: false
          type: number
          format: float
        min_temperature:
          maximum: 1E+2
          exclusiveMaximum: false
          minimum: -1E+2
          exclusiveMinimum: false
          type: number
          format: float
        name:
          maxLength: 20
          minLength: 4
          type: string
    ProductResponseDTO:
      title: ProductResponseDTO
      type: object
      properties:
        category_refrigeration:
          type: string
          enum:
            - COLD
            - FRESH
            - FROZEN
        description:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
    RepresentativeRequestDTO:
      title: RepresentativeRequestDTO
      required:
        - email
        - job
        - name
        - pass
        - username
        - warehouse_id
      type: object
      properties:
        email:
          pattern: ^[\w!#$%&'*+/=?`{|}~^-]+(?:\.[\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}$
          type: string
        job:
          type: string
          enum:
            - LIDER
            - SUPERVISOR
        name:
          maxLength: 60
          minLength: 2
          pattern: ^[-'a-zA-ZÀ-ÖØ-öø-ÿ ]+$
          type: string
        pass:
          maxLength: 2147483647
          minLength: 8
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\S+$).{8,}$
          type: string
        username:
          maxLength: 16
          minLength: 4
          pattern: ^[A-Za-z][A-Za-z0-9_]{3,16}$
          type: string
        warehouse_id:
          type: integer
          format: int64
    RepresentativeResponseDTO:
      title: RepresentativeResponseDTO
      type: object
      properties:
        email:
          type: string
        id:
          type: integer
          format: int64
        job:
          type: string
          enum:
            - LIDER
            - SUPERVISOR
        name:
          type: string
        username:
          type: string
        warehouse_id:
          type: integer
          format: int64
    SectionRequestDTO:
      title: SectionRequestDTO
      required:
        - current_stock
        - id_warehouse
        - max_teperature
        - min_teperature
        - name
        - stock_limit
        - type
      type: object
      properties:
        current_stock:
          type: integer
          format: int32
        id_warehouse:
          type: integer
          format: int64
        max_teperature:
          maximum: 1E+2
          exclusiveMaximum: false
          minimum: -1E+2
          exclusiveMinimum: false
          type: number
          format: float
        min_teperature:
          maximum: 1E+2
          exclusiveMaximum: false
          minimum: -1E+2
          exclusiveMinimum: false
          type: number
          format: float
        name:
          maxLength: 16
          minLength: 4
          type: string
        stock_limit:
          type: integer
          format: int32
        type:
          type: string
          enum:
            - COLD
            - FRESH
            - FROZEN
    SectionRequestDTOForInboundOrder:
      title: SectionRequestDTOForInboundOrder
      required:
        - section_code
        - warehouse_code
      type: object
      properties:
        section_code:
          type: integer
          format: int64
        warehouse_code:
          type: integer
          format: int64
    SectionResponseDTO:
      title: SectionResponseDTO
      type: object
      properties:
        current_stock:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
        max_teperature:
          type: number
          format: float
        min_teperature:
          type: number
          format: float
        name:
          type: string
        refrigeration_type:
          type: string
          enum:
            - COLD
            - FRESH
            - FROZEN
        stock_limit:
          type: integer
          format: int32
        warehouse_code:
          type: integer
          format: int64
    SectionResponseDTOForInboundOrder:
      title: SectionResponseDTOForInboundOrder
      type: object
      properties:
        section_code:
          type: integer
          format: int64
        warehouse_code:
          type: integer
          format: int64
    SellOrderResponseDTO:
      title: SellOrderResponseDTO
      type: object
      properties:
        buyer_id:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        order_item_response_dtolist:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponseDTO'
        order_status:
          type: string
          enum:
            - CANCELED
            - CART
            - CREATED
            - DELIVERED
            - NOT_DELIVERED
            - PAID
            - SEPARATION
            - SHIPPED
        shipping_rate:
          type: number
        total_value:
          type: number
    SellerRequestDTO:
      title: SellerRequestDTO
      required:
        - email
        - name
        - pass
        - username
      type: object
      properties:
        email:
          pattern: ^[\w!#$%&'*+/=?`{|}~^-]+(?:\.[\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,6}$
          type: string
        name:
          maxLength: 60
          minLength: 2
          pattern: ^[-'a-zA-ZÀ-ÖØ-öø-ÿ ]+$
          type: string
        pass:
          maxLength: 2147483647
          minLength: 8
          pattern: ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\S+$).{8,}$
          type: string
        username:
          maxLength: 16
          minLength: 4
          pattern: ^[A-Za-z][A-Za-z0-9_]{3,16}$
          type: string
    SellerResponseDTO:
      title: SellerResponseDTO
      type: object
      properties:
        email:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        username:
          type: string
    TransporterRequestDTO:
      title: TransporterRequestDTO
      required:
        - car_model
        - car_plate
        - cold_max_quantity
        - fresh_max_quantity
        - frozen_max_quantity
        - name
      type: object
      properties:
        car_model:
          maxLength: 20
          minLength: 2
          pattern: ^[A-Za-z0-9-_ ]{2,20}$
          type: string
        car_plate:
          pattern: '[A-Z]{3}[0-9][0-9A-Z][0-9]{2}'
          type: string
        cold_max_quantity:
          type: integer
          format: int32
        fresh_max_quantity:
          type: integer
          format: int32
        frozen_max_quantity:
          type: integer
          format: int32
        name:
          maxLength: 60
          minLength: 2
          pattern: ^[-'a-zA-ZÀ-ÖØ-öø-ÿ ]+$
          type: string
    TransporterResponseDTO:
      title: TransporterResponseDTO
      type: object
      properties:
        car_model:
          type: string
        car_plate:
          type: string
        delivery_order_list:
          type: array
          items:
            $ref: '#/components/schemas/SellOrderResponseDTO'
        id:
          type: integer
          format: int64
        in_route:
          type: boolean
        name:
          type: string
        payment_for_delivery:
          type: number
        salary:
          type: number
    UserResponseDTO:
      title: UserResponseDTO
      type: object
      properties:
        email:
          type: string
        id:
          type: integer
          format: int64
        name:
          type: string
        username:
          type: string
    View:
      title: View
      type: object
      properties:
        content_type:
          type: string
    WarehouseRequestDTO:
      title: WarehouseRequestDTO
      required:
        - location
        - name
      type: object
      properties:
        location:
          maxLength: 80
          minLength: 2
          type: string
        name:
          maxLength: 16
          minLength: 4
          type: string
    WarehouseResponseDTO:
      title: WarehouseResponseDTO
      type: object
      properties:
        id:
          type: integer
          format: int64
        location:
          type: string
        name:
          type: string
    WarehouseResponseDTOByProduct:
      title: WarehouseResponseDTOByProduct
      type: object
      properties:
        total_quantity:
          type: integer
          format: int32
        warehouse_code:
          type: integer
          format: int64
